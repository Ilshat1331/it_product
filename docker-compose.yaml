version: '3.8'

# 6100 - auth
# 6101 - db_auth
# 6200 - data
# 6201 - db_data

services:
  auth:
    restart: on-failure
    build: ./auth
    container_name: auth
    environment:
      - SECRET_KEY=SECRET_KEY
      - PORT=6100
      - DB_USER=admin
      - DB_PASSWORD=root
      - DB_HOST=db_auth
      - DB_PORT=6101
      - DB_NAME=postgres
      - TIME=1
    depends_on:
      - db_auth
    networks:
      - internal_net

  db_auth:
    restart: on-failure
    container_name: db_auth
    ports:
      - "6101:6101"
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=admin
    image: postgres:15.0-alpine
    command:
      - "postgres"
      - "-c"
      - "port=6101"
    volumes:
      - db_auth_vol:/var/lib/postgresql/data
    networks:
      - internal_net

  db_data:
    restart: on-failure
    container_name: db_data
    ports:
      - "6201:6201"
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=admin
    image: postgres:15.0-alpine
    command:
      - "postgres"
      - "-c"
      - "port=6201"
    volumes:
      - db_data_vol:/var/lib/postgresql/data
    networks:
      - internal_net

  data:
    restart: on-failure
    build: ./data
    container_name: data
    environment:
      - SECRET_KEY=SECRET_KEY
      - PORT=6200
      - DB_USER=admin
      - DB_PASSWORD=root
      - DB_HOST=db_data
      - DB_PORT=6201
      - DB_NAME=postgres
    depends_on:
      - db_data
    networks:
      - internal_net

  nginx:
    restart: on-failure
    container_name: nginx
    image: nginx:1.23.2-alpine
    networks:
      - internal_net
    ports:
      - 80:80
    depends_on:
      - auth
      - data
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf

volumes:
  db_auth_vol: {}
  db_data_vol: {}

networks:
  internal_net:
    driver: bridge
